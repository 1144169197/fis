/*
 * fis
 * http://web.baidu.com/
 */

'use strict';

//copy from fis-parser-extjs
function parseJs(content, fis){
    var map = fis.compile.lang;
    var reg = /"(?:[^\\"]|\\[\s\S])+"|'(?:[^\\']|\\[\s\S])+'|\/\/[\r\n]+|\/\*[\s\S]+?\*\/|\bF\.(inline|uri)\s*\(\s*("(?:[^\\"]|\\[\s\S])+"|'(?:[^\\']|\\[\s\S])+')\s*\)/g;
    return content.replace(reg, function(m, type, value){
        switch (type){
            case 'inline':
                m = map.embed.ld + value + map.embed.rd;
                break;
            case 'uri':
                m = map.uri.ld + value + map.uri.rd;
                break;
        }
        return m;
    });
}

//copy from fis-parser-extcss
function parseCss(content, fis){
    var map = fis.compile.lang;
    var reg = /\burl\s*\(\s*("(?:[^\\"]|\\[\s\S])+"|'(?:[^\\']|\\[\s\S])+'|[^)}]+)\s*\)|\bsrc\s*=\s*("(?:[^\\"]|\\[\s\S])+"|'(?:[^\\']|\\[\s\S])+'|[^\s}]+)/g;
    return content.replace(reg, function(m, url, filter){
        if(url){
            var info = fis.util.query(url);
            var key = /[?&]inline(?:[=&'"]|$)/.test(info.query) ? 'embed' : 'uri';
            m = 'url(' + map[key]['ld'] + url + map[key]['rd'] + ')';
        } else if(filter) {
            m = 'src=' + map.uri.ld + filter + map.uri.rd;
        }
        return m;
    });
}

module.exports = function(content, file, conf, fis){
    var map = fis.compile.lang;
    var reg = /(<script(?:\s+(?:[^<>?]|<\?|\?.)+)?>)([\s\S]*?)(?=<\/script>)|(<style(?:\s+(?:[^<>?]|<\?|\?.)+)?>)([\s\S]+?)(?=<\/style>)|<(img|embed|audio|video|link|object)\s+(?:[^<>?]|<\?|\?.)+>/ig;
    return content.replace(reg, function(m, $1, $2, $3, $4, $5){
        if($1){//<script>
            var embed = false;
            $1 = $1.replace(/(\s(?:data-)?src\s*=\s*)('[^']+'|"[^"]+"|\S+)/ig, function(m, prefix, value){
                var info = fis.util.query(value);
                if(/[?&]inline(?:[=&'"]|$)/.test(info.query)){
                    embed = map.embed.ld + value + map.embed.rd;
                    return '';
                } else {
                    return prefix + map.uri.ld + value + map.uri.rd;
                }
            });
            m = $1 + (embed || parseJs($2, fis));
        } else if($3){//<style>
            m = $3 + parseCss($4, fis);
        } else if($5){//<img|embed|audio|video|link|object>
            var tag = $5.toLowerCase();
            if(tag === 'link'){
                m = m.replace(/(\s(?:data-)?href\s*=\s*)('[^']+'|"[^"]+"|\S+)/ig, function(m, prefix, value){
                    return prefix + map.uri.ld + value + map.uri.rd;
                });
            } else if(tag === 'object'){
                m = m.replace(/(\sdata\s*=\s*)('[^']+'|"[^"]+"|\S+)/ig, function(m, prefix, value){
                    return prefix + map.uri.ld + value + map.uri.rd;
                });
            } else {
                m = m.replace(/(\s(?:data-)?src\s*=\s*)('[^']+'|"[^"]+"|\S+)/ig, function(m, prefix, value){
                    var info = fis.util.query(value);
                    var key = /[?&]inline(?:[=&'"]|$)/.test(info.query) ? 'embed' : 'uri';
                    return prefix + map[key]['ld'] + value + map[key]['rd'];
                });
            }
        }
        return m;
    });
};