/*
 * fis
 * http://web.baidu.com/
 */

'use strict';
    
var CONF_FILE = 'fis-conf.json';

exports.name = 'release';
exports.desc = 'build and deploy your project';
exports.register = function(commander, fis){
    
    commander
        .option('-d, --dest <names>', 'release output destination')
        .option('-w, --watch', 'monitor the changes of project')
        .option('-c, --clean', 'clean cache before releasing')
        .option('-t, --type <ext>', 'resouce map type', String, 'php')
        .option('-m, --md5 <level>', 'md5 release option', parseInt, 1)
        .option('-D, --domain', 'add domain', Boolean, false)
        .option('-H, --no-hint', 'without hint', Boolean, true)
        .option('-O, --no-optimize', 'without optimize', Boolean, true)
        .option('-P, --no-package', 'without package', Boolean, true)
        .option('--debug', 'debug mode', Boolean, false)
        .action(function(options){
            var cwd = fis.util.realpath(process.cwd()),
                filename = fis.config.get('system.conf', fis.project.DEFAULT_CONF_FILE),
                pos = cwd.length, conf;
            do {
                cwd  = cwd.substring(0, pos);
                conf = cwd + '/' + filename;
                if(fis.util.exists(conf)){
                    fis.project.init(cwd, conf, function(){
                        fis.log.level = options.debug ? fis.log.L_ALL : fis.log.level;
                        fis.log.throw = true;
                        fis.compile.setup({
                            debug    : options.debug,
                            optimize : options.optimize,
                            hint     : options.hint,
                            hash     : options.md5 > 0,
                            domain   : options.domain
                        });
                        if(options.watch){
                            require('./lib/watch.js').register(options, fis);
                        } else {
                            require('./lib/nowatch.js').register(options, fis);
                        }
                    });
                    return;
                }
            } while(pos > 0);
            fis.log.error('unable to find fis-conf file [' + filename + ']');
        });
};